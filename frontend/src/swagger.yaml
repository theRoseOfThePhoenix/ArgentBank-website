swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions for the current month
      description: Retrieve all transactions for the current month
      responses:
        "200":
          description: List of transactions for the current month retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      summary: Get detail of one transaction
      description: Show all informations about specific transaction.
      security:
        - Bearer: []
      tags:
        - Transactions Module
      parameters:
        - name: transactionId
          description: Unique ID of transaction
          in: path
          required: true
          type: string
      responses:
        "200":
          description: The request was successful.
          schema:
            $ref: "#/definitions/TransactionApiResponse"
        "400":
          description: Invalid data provided
        "404":
          description: Transaction not found

  /transactions/entities/{entityId}:
    put:
      summary: Update a category or note
      description: Updates a specific category or note identified by its ID.
      security:
        - Bearer: []
      tags:
        - Transactions Module
      parameters:
        - name: entityId
          description: Unique ID of transaction
          in: path
          required: true
          type: string
        - name: entityType
          description: Category or note
          in: query
          required: true
          type: string
          enum:
            - note
            - category
        - in: body
          name: updateDetails
          description: New category and note information for the transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionCategoryNote"
            responses:
              "200":
                description: Entity updated successfully. The response will vary based on the entity type.
                schema:
                  type: object # Définir le type à 'object' pour encapsuler le 'oneOf'
                  properties:
                    response:
                      oneOf:
                        - $ref: "#/definitions/CategoryApiResponse"
                        - $ref: "#/definitions/NoteApiResponse"
      "400":
        description: Invalid data provided
      "404":
        description: Entity not found

    delete:
      summary: Delete a category or note
      description: Deletes a specific category or note identified by its ID.
      security:
        - Bearer: []
      tags:
        - Transactions Module
      parameters:
        - name: entityId
          in: path
          required: true
          type: string
        - name: entityType
          in: query
          required: true
          type: string
          enum:
            - note
            - category
      responses:
        "204":
          description: Entity successfully deleted
        "404":
          description: Entity not found
        "403":
          description: Deletion forbidden due to integrity constraints

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

        #réponse de l'API contenant le token lors de la connexion
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

      # tableau qui contient la liste de toute les transactions
  TransactionsResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/TransactionApiResponse"
      # structure de la réponse de l'API pour 1 transaction
  TransactionApiResponse:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format: date
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: number
        description: Amount of the transaction
      transaction_type:
        type: string
        description: Type of transaction
      note:
        type: string
        description: Note of the transaction
      category:
        type: string
        description: Category of the transaction

        # structure de l'objet pour la modification des notes et des categorys
  TransactionCategoryNote:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  CategoryApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  NoteApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
